Best Time to Buy and Sell Stock II

描述

Say you have an array for which the ith element is the price of a given stock on day i.

Design an algorithm to find the maximum profit. You may complete as many transactions as you like 
(ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple 
transactions at the same time (ie, you must sell the stock before you buy again).

分析

所谓可以买卖任意多次就是说不要漏掉任何一次可以赚钱的买卖，否则不能得到最大利润。
所以需要贪婪地查看每天的股价，如果当天的股价比昨天的高则卖出，也就是说只有知道今天的
股价才能知道昨天是否要买入，这在实际股票交易中不可能做到，但是此题已知所有的股价，才可以这么做。
贪心法，低进高出，把所有正的价格差价相加起来。

时间复杂度O(n)，空间复杂度O(1)

代码

public class Solution {
    public int maxProfit(int[] prices) {
        if(prices == null || prices.length == 0) {
            return 0;
        }
        
        int maxProfit = 0;

        for (int i=1; i<prices.length; i++) {
            int diff = prices[i] - prices[i-1];

            if(diff > 0) {
                maxProfit += diff;
            }
        }

        return maxProfit;
    }
}