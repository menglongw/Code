Palindrome Number

描述

Determine whether an integer is a palindrome. Do this without extra space.

Some hints:
Could negative integers be palindromes? (ie, -1)

If you are thinking of converting the integer to string, note the restriction of using extra space.

You could also try reversing an integer. However, if you have solved the problem "Reverse Integer", 
you know that the reversed integer might overflow. How would you handle such case?

There is a more generic way of solving this problem.

分析

时间复杂度O(n)，空间复杂度O(1)

代码

public class Solution {
    public boolean isPalindrome(int x) {
        // 负数不是回文
        if(x < 0)
            return false;

        int div = 1;

        while(x/div >= 10) {
            div = div * 10;
        }

        //剩下两位数和以上才需要检查，剩下一位数一定是回文?
        // while(x > 9) 这样处理不了输入为1021的情况，此情况会返回true
        while(x > 0) {
            if(x%10 != x/div)
                return false;
            
            //掐头去尾
            x = (x%div)/10;
            //少了头尾两位，所以除以100
            div = div/100;
        }
        
        return true;
    }
}