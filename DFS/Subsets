Subsets

描述

Given a set of distinct integers, nums, return all possible subsets.

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]


分析

递归，深度优先

代码

public class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        // 空集也是一个subset
        result.add(new ArrayList<Integer>());
        
        if(nums == null || nums.length == 0) {
            return result;
        }
        
        Arrays.sort(nums);
        List<Integer> subset = new ArrayList<>();
        
        for(int i=0; i<nums.length; i++) {
            // 计算长度为1,2,...nums.length的各个subset
            // 相同长度的subsets的head分别为0,1,...nums,length-1
            subsetsWithLenK(result, subset, nums, i+1, 0);
        }
        
        return result;
    }
    
    private void subsetsWithLenK(List<List<Integer>> result, List<Integer> subset, int[] nums, int len, int current) {
        if(subset.size() == len) {
            result.add(new ArrayList<Integer>(subset));
            return;
        }
        
        // 相同长度的subsets的head分别为0,1,...nums,length-1
        for(int i=current; i<nums.length; i++) {
            subset.add(nums[i]);
            subsetsWithLenK(result, subset, nums, len, i+1);
            subset.remove(subset.size()-1);
        }
    }
}