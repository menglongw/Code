First Missing Positive

描述

Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.

分析

桶排序

时间复杂度O(n)，空间复杂度O(1)

代码

public class Solution {
    public int firstMissingPositive(int[] nums) {
        bucketSort(nums);

        for(int i=0; i<nums.length; i++) {
            if(nums[i] != i+1)
                return i+1;
        }
        
        return nums.length+1;
    }

    private void bucketSort(int[] nums) {
        int i=0;

        while(i<nums.length) {
            // nums[i] != nums[nums[i]-1]避免准备交换的两个数一样，造成死循环
            // 0 <= nums[i]-1 && nums[i]-1 < nums.length保证下标不超出数组范围
            // nums[i] != i+1，桶排序的定义，值为a的数应该为数组第a个数（下标为a-1）
            if(nums[i] != i+1 && 0 <= nums[i]-1 && nums[i]-1 < nums.length && nums[i] != nums[nums[i]-1]) {
                swap(nums, i, nums[i]-1);
            } else {
                i++;
            }
        }
    }
    
    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}