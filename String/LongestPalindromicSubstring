Longest Palindromic Substring

描述

Given a string s, find the longest palindromic substring in s. 
You may assume that the maximum length of s is 1000.

Example:
Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.

Example:
Input: "cbbd"
Output: "bb"

分析

动态规划

如果s[i] == s[j](i < j， 并且i和j不相邻)，只要dp[n+1][m-1]是回文，
那么dp[i][j]是回文。

如果s[i] == s[j](i < j， 并且i和j相邻(i+1=j))，
那么dp[i][j]是回文。

如果s[i] == s[j](i == j， 同一个字符)，
那么dp[i][j]是回文。

时间复杂度O(n^2)，空间复杂度O(n^2)

代码

public class Solution {
    public String longestPalindrome(String s) {
        int len = s.length();
        boolean[][] dp = new boolean[len][len];
        int start = 0;
        int maxLen = 1;

        for(int currentLen=1; currentLen<=len; currentLen++) {
            for(int i=0; i+currentLen-1<len; i++) {
                int j = i+currentLen-1;

                if(s.charAt(i) == s.charAt(j)) {
                    if(currentLen <= 2) {
                        // currentLen为1和2的情况拿出来单独处理，否则i+1大于j-1
                        dp[i][j] = true;
                        start = i;
                        maxLen = currentLen;
                    } else {
                        if(dp[i+1][j-1] == true) {
                            dp[i][j] = true;
                            start = i;
                            maxLen = currentLen;
                        }
                    }
                }
            }
        }
        
        return s.substring(start, start+maxLen);
    }
}