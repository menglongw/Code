Search in Rotated Sorted Array

描述

Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

分析

mid为target时返回mid，mid不是target时有四种情况。
1. mid在pivot左边，target在l和mid之间
2. mid在pivot左边，target在mid和h之间
3. mid在pivot右边，target在mid和h之间
4. mid在pivot右边，target在l和mid之间
 
时间复杂度O(logn)，空间复杂度O(1)

代码

public class Solution {
    public int search(int[] nums, int target) {
        if(nums == null || nums.length == 0)
            return -1;
        
        int l = 0;
        int h = nums.length-1;
        
        while(l <= h) {
            int mid = l + (h-l)/2;
            
            if(nums[mid] == target) {
                return mid;
            } else if(nums[l] <= nums[mid]) {
                if(nums[l] <= target && target < nums[mid])
                    h = mid-1;
                else
                    l = mid+1;
            } else if(nums[l] > nums[mid]) {
                if(nums[mid] < target && target <= nums[h])
                    l = mid+1;
                else
                    h = mid-1;
            }
        }
        
        return -1;
    }
}
