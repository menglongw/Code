Find Minimum in Rotated Sorted Array

描述

Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.

分析

没有mi+1或mid-1是因为怕跳过pivot，因为不像一般二分查找有target==a[mid]，所有可能跳过

时间复杂度O(logn)，最坏O(n)，空间复杂度O(1)

public class Solution {
    public int findMin(int[] nums) {
        int l = 0;
        int h = nums.length - 1;
        
        // 非旋转数组
        if(nums[l] < nums[h])
            return nums[l];

        while(l < h) {
            if(h - l == 1) {
                // 求最小值返回nums[h]，求最大值返nums[l]
                return nums[h];
            }

            int mid = l + (h-l) / 2;

            // 没有重复元素，所以不可能nums[l] == nums[mid]
            if(nums[l] < nums[mid])
                l = mid;
            else if(nums[l] > nums[mid])
                h = mid;
        }

        // 只有一个元素时的情况
        return nums[0];
    }
}