Partition List

描述

Given a linked list and a value x, partition it such that all nodes less than x come before 
nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

For example,
Given 1->4->3->2->5->2 and x = 3,
return 1->2->2->4->3->5.

分析

两个dummy node，一个连接原始数组，如果原始数组上有大于等于x的结点则挪到dummy2的链表上。
最后把两个链表对接起来然后返回即可。

时间复杂度O(n)，空间复杂度O(1)

代码

public class Solution {
    public ListNode partition(ListNode head, int x) {
        if(head == null || head.next == null) {
            return head;
        }
        
        ListNode dummy1 = new ListNode(0);
        dummy1.next = head;
        ListNode dummy2 = new ListNode(0);
        
        ListNode p1 = dummy1;
        ListNode p2 = dummy2;
        
        while(p1.next != null) {
            ListNode next = p1.next;

            if(next.val >= x) {
                p2.next = next;
                p1.next = next.next;
                p2 = p2.next;
                p2.next = null;
            } else {
                p1 = next;
            }
        }
        
        p1.next = dummy2.next;
        return dummy1.next;
    }
}