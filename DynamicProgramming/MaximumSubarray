Maximum Subarray

描述

Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

More practice:
If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.

分析

currentMax+nums[i] < nums[i]说明前n-1个一直在拖后腿，
currentMax+nums[i] > nums[i]前面的元素没拖后腿可以再继续往后看看。

时间复杂度O(n)，空间复杂度O(1)


代码

public class Solution {
    public int maxSubArray(int[] nums) {
        int max = nums[0];
        int currentMax = nums[0];
        
        for(int i=1; i<nums.length; i++) {
            currentMax = Math.max(currentMax+nums[i], nums[i]);
            max = Math.max(currentMax, max);
        }
        
        return max;
    }
}

