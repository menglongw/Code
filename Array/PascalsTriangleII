Pascal's Triangle II

描述

Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

分析

题目k=3， 返回[1,3,3,1]说明是zero-based
要使用O(k)空间则只能用一个list，而且list的长度是变化的。这和Pascal's Triangle I不同，
那道题需要两个list，一个list会变化不能复用。

时间复杂度O(n^2)，空间复杂度O(n)

代码

public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> row = new ArrayList<>();
        
        if(rowIndex < 0)
            return row;
        
        row.add(1);
        
        for(int i=1; i<=rowIndex; i++) {
            for(int k=row.size()-1; k>0; k--) {
                row.set(k, row.get(k) + row.get(k-1));
            }
            
            row.set(0, 1);
            row.add(1);
        }
        
        return row;
    }
}