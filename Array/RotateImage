Rotate Image

描述

You are given an n × n 2D matrix representing an image.
Rotate the image by 90 degrees (clockwise).
Follow up: Could you do this in-place?

分析

首先想到，纯模拟，从外到内一圈一圈的转，但这个方法太慢。
首先沿着副对角线翻转一次，然后沿着水平中线翻转一次。
也可以先沿着水平中线翻转一次，然后沿着主对角线翻转一次。

沿对角线翻转相当于顺时针旋转180度，再上下翻转相当于逆时针旋转90度。
180-90=90，所以相当于顺时针旋转90度

时间复杂度O(n^2)，空间复杂度O(1)

代码

public class Solution {
    public void rotate(final int[][] matrix) {
        final int n = matrix.length;

        for (int i = 0; i < n; ++i)  // 沿着副对角线反转
            for (int j = 0; j < n - i; ++j)
                swap(matrix, i, j, n - 1 - j, n - 1 - i);

        for (int i = 0; i < n / 2; ++i) // 沿着水平中线反转
            for (int j = 0; j < n; ++j)
                swap(matrix, i, j, n - 1 - i, j);
    }

    private void swap(final int[][] matrix, int i, int j, int p, int q) {
        int tmp = matrix[i][j];
        matrix[i][j] = matrix[p][q];
        matrix[p][q] = tmp;
    }
};